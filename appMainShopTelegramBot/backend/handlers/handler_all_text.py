# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å-—Ä–æ–¥–∏—Ç–µ–ª—å
from backend.handlers.handler import Handler
from settings import config
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
from settings.message import MESSAGES
from db.crud.answers_crud import get_answer_all
from db.crud.orders_crud import get_order_by_user_id
from db.crud.orders_products_crud import get_product_all_from_order

class HandlerAllText(Handler):
    """
    –ö–ª–∞—Å—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏
    """

    def __init__(self, bot):
        super().__init__(bot)
        self.step = 0
    
    def pressed_btn_category(self, message):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–ú–µ–Ω—é'. –ê —Ç–æ—á–Ω–µ–µ
        —ç—Ç–æ –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
        """
        self.bot.send_message(message.chat.id, "–ú–µ–Ω—é",
                              reply_markup=self.keybords.remove_menu())
        self.bot.send_message(message.chat.id, "–°–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä",
                              reply_markup=self.keybords.category_menu())

    def pressed_btn_info(self, message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ—á–∫–∏ '–û –∫–∞—Ñ–µ'
        """
        self.bot.send_message(
            message.chat.id, MESSAGES["trading_store"], parse_mode="HTML", reply_markup=self.keybords.info_menu()
        )

    def pressed_btn_settings(self, message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ—á–∫–∏ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'
        """
        self.bot.send_message(
            message.chat.id, MESSAGES["settings"], parse_mode="HTML", reply_markup=self.keybords.settings_menu()
        )
    
    def pressed_btn_comment(self, message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ—á–∫–∏ '–û—Ç–∑—ã–≤—ã –æ –±–ª—é–¥–∞—Ö'
        """
        answer_all=get_answer_all()["content"]

        self.bot.send_message(message.chat.id, "üëá –û—Ç–∑—ã–≤—ã –Ω–∞ –Ω–∞—à–∏ –±–ª—é–¥–∞ –∏ –Ω–∞–ø–∏—Ç–∫–∏ üòã",
                              reply_markup=self.keybords.comment_menu())
        for itm in answer_all:
            self.bot.send_message(message.chat.id, 
                                MESSAGES["comment"].
                                format(itm[0], itm[1]), parse_mode="HTML")
        
    def pressed_btn_back(self, message):
        """
        –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'.
        """
        self.bot.send_message(message.chat.id, "üëá –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", 
                              reply_markup=self.keybords.start_menu())

    def pressed_btn_product(self, message, product):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–í—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä'. –ê —Ç–æ—á–Ω–µ–µ
        —ç—Ç–æ –≤—ã–±–æ—Ä —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        """
        self.bot.send_message(message.chat.id, '–ö–∞—Ç–µ–≥–æ—Ä–∏—è ' +
                              config.KEYBOARD[product],
                              reply_markup=self.keybords.set_select_category(config.CATEGORY[product]))
        self.bot.send_message(message.chat.id, "–û–∫",
                              reply_markup=self.keybords.category_menu())
    
    def pressed_btn_order(self, message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–ó–∞–∫–∞–∑'.
        """
        order_id = get_order_by_user_id(message.from_user.id)
        # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ
        print("###################")
        products = get_product_all_from_order(order_id)["content"]
        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
       
        for itm in products:
            self.bot.send_message(message.chat.id,
                      MESSAGES['order'].format(itm[0], itm[1],itm[2],itm[3],itm[4]), parse_mode="HTML")




    
    def handle(self):
        # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫(–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä) —Å–æ–æ–±—â–µ–Ω–∏–π,
        # –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫.
        @self.bot.message_handler(func=lambda message: True)
        def handle(message):
            # ********** –º–µ–Ω—é ********** #
            if message.text == config.KEYBOARD['CHOOSE_GOODS']:
                self.pressed_btn_category(message)

            if message.text == config.KEYBOARD["INFO"]:
                self.pressed_btn_info(message)

            if message.text == config.KEYBOARD["SETTINGS"]:
                self.pressed_btn_settings(message)
            
            if message.text == config.KEYBOARD["COMMENT"]:
                self.pressed_btn_comment(message)

            if message.text == config.KEYBOARD["<<"]:
                self.pressed_btn_back(message)

            # ********** –º–µ–Ω—é (–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞, –ü–§, –ë–∞–∫–∞–ª–µ—è, –ú–æ—Ä–æ–∂–µ–Ω–æ–µ)******
            if message.text == config.KEYBOARD['EUROPEAN_MENU']:
                self.pressed_btn_product(message, 'EUROPEAN_MENU')

            if message.text == config.KEYBOARD['JAPANESE_MENU']:
                self.pressed_btn_product(message, 'JAPANESE_MENU')

            if message.text == config.KEYBOARD['PIZZA']:
                self.pressed_btn_product(message, 'PIZZA')

            if message.text == config.KEYBOARD['ORDER']:
                user_id = message.from_user.id
                
                if get_order_by_user_id(user_id)["content"].id > 0:
                    
                    self.pressed_btn_order(message)
                else:
                    self.bot.send_message(message.chat.id,MESSAGES['no_orders'],
                        parse_mode="HTML",
                        reply_markup=self.keybords.category_menu())
